plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id 'java'
    id("io.gitlab.arturbosch.detekt").version("1.0.0-RC11")
}

group 'org.kat'
version '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    compile 'io.javalin:javalin:2.4.0'
    compile 'io.ktor:ktor-server-core:1.0.0'
    compile 'io.ktor:ktor-server-netty:1.0.0'

    compile 'org.slf4j:slf4j-simple:1.7.25'

    compile 'com.mcxiaoke.koi:core:0.5.5' // useful extensions (only ~100k)
    compile 'com.mcxiaoke.koi:async:0.5.5' // async functions (only ~70k)

    compile 'com.github.kittinunf.fuel:fuel:1.15.1'

    compile 'org.jetbrains.exposed:exposed:0.11.2'

    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+'

    detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC11'

    testCompile 'io.mockk:mockk:1.8.13.kotlin13'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.2'

    testCompile("junit:junit:4.12")
    testCompile('org.junit.vintage:junit-vintage-engine:5.3.2') {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    testCompile('org.junit.platform:junit-platform-launcher:1.3.2') {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

detekt {
    toolVersion = "1.0.0-RC11"
    input = files("src/main/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
}

test {
    useJUnitPlatform {
        // includeEngines 'junit-jupiter', 'junit-vintage'
        // excludeEngines 'custom-engine'

        // includeTags 'fast'
        excludeTags 'slow'
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}