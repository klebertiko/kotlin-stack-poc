buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.20"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.0.0-RC14"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id "maven"
    id "idea"
    id "application"
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.3.20"
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC14"
    id "org.jetbrains.dokka" version "0.9.17"
    id "org.ajoberstar.grgit" version "3.0.0" apply false
}

group "org.kat"
version "1.0.0-SNAPSHOT"
mainClassName = "org.kat.JavalinAPIKt"
//mainClassName = "org.kat.KTorAPIKt"

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/test/kotlin"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin.experimental.coroutines = "enable"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:1.3.20"
    implementation "org.jetbrains.kotlin:kotlin-runtime:1.2.71"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.20"
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.3.20"
    testImplementation "org.jetbrains.kotlin:kotlin-test-common:1.3.20"
    testImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common:1.3.20"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.20"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:1.3.20"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.2.1"

    implementation "org.slf4j:slf4j-simple:1.7.25"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"

    implementation "io.javalin:javalin:2.6.0"

    implementation "io.ktor:ktor-server-core:1.0.0"
    implementation "io.ktor:ktor-server-netty:1.0.0"
    implementation "io.ktor:ktor-auth:1.0.0"
    implementation "io.ktor:ktor-auth-jwt:1.0.0"
    implementation "io.ktor:ktor-jackson:1.0.0"
    implementation "io.ktor:ktor-gson:1.0.0"
    testImplementation "io.ktor:ktor-server-test-host:1.0.0"

    implementation "com.auth0:java-jwt:3.+"

    implementation 'org.koin:koin-core:1.0.2'
    testImplementation 'org.koin:koin-test:1.0.2'

    implementation "com.github.kittinunf.fuel:fuel:1.15.1"
    implementation "com.github.kittinunf.fuel:fuel-coroutines:1.15.1"
    implementation "com.github.kittinunf.fuel:fuel-kotlinx-serialization:1.15.1"
    implementation "com.github.kittinunf.fuel:fuel-json:1.15.1"
    implementation "com.github.kittinunf.fuel:fuel-gson:1.15.1"
    implementation "com.github.kittinunf.fuel:fuel-jackson:1.15.1"

    implementation "org.jetbrains.exposed:exposed:0.11.2"

    implementation "io.nats:jnats:2.4.1"

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC14"

    implementation enforcedPlatform("org.junit:junit-bom:5.4.0")

    testImplementation "org.junit.platform:junit-platform-runner:1.4.0"
    testImplementation "org.junit.platform:junit-platform-launcher:1.4.0"
    testImplementation "org.junit.platform:junit-platform-console:1.4.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"

    testImplementation "junit:junit:4.12"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.4.0"

    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.0-rc.1"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:2.0.0-rc.1"

    testImplementation "io.mockk:mockk:1.9.1.kotlin13"
}

test {
    useJUnitPlatform {
        includeEngines "spek2", "junit-jupiter", "junit-vintage"
    }
}

detekt {
    toolVersion = "1.0.0-RC12"
    input = files("src/main/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
    reports {
        xml {
            enabled = true
        }
        html {
            enabled = true
        }
    }
}

dokka {
    outputFormat = "html"
    outputDirectory = "$buildDir/kdoc"
}

import org.ajoberstar.grgit.Grgit
task cloneKTorSwaggerRepo {
    doLast {
        def grgit = Grgit.clone(dir: "$buildDir/ktor-swagger", uri: "https://github.com/nielsfalk/ktor-swagger.git")
        println grgit.describe()
    }
}